@model SchoolPrdModels.EnrollmentModel
@using ArchitectureLibraryCacheData
<style>
    #FirstName-error, #LastName-error, #MiddleName-error, #EmailAddress-error, #TelephoneNumber-error, #EnrollmentTypeIdList-error, #ContactMessage-error, #AddressLine1-error, #AddressLine2-error, #ZipCode-error, #CityName-error, #DemogInfoSubDivisionId-error, #DrugScreenId-error, #DrivingLicenseDemogInfoSubDivisionId-error, #CaptchaAnswerEnrollment-error {
        color: #ff0000;
        display: block;
        font-size: 14px;
        font-weight: bold;
    }
</style>
<div class="col-md-10">
    @if (Model != null && Model.ResponseObjectModel != null && !string.IsNullOrWhiteSpace(Model.ResponseObjectModel.ValidationSummaryMessage))
    {
        <div class="row validationSummaryMessage" id="divResetPasswordValidationSummaryMessage">
            @Model.ResponseObjectModel.ValidationSummaryMessage
        </div>
    }
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="row" id="divResetPasswordValidationSummary">
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(false, "", new { @class = "validationSummaryErrors", style = "column-count: 3" }).ToHtmlString()))
        </div>
    }
    @if (Model != null && Model.ResponseObjectModel != null)
    {
        <div class="row" id="divResetPasswordResponseObject">
            @Html.Partial("_ResponseObject", Model.ResponseObjectModel)
        </div>
    }
    <div class="col-md-5">
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", maxlength = "100", oninput = "javascript: return checkMaxLength(this);", placeholder = "First Name", style = "width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.FirstName, "", new { id = "FirstName-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.LastName, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", maxlength = "100", oninput = "javascript: return checkMaxLength(this);", placeholder = "Last Name", style = "width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LastName, "", new { id = "LastName-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.MiddleName, new { @class = "col-form-label" })
            @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", maxlength = "100", oninput = "javascript: return checkMaxLength(this);", placeholder = "Middle Name", style = "width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.MiddleName, "", new { id = "MiddleName-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.EmailAddress, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control", maxlength = "256", oninput = "javascript: return checkMaxLength(this);", placeholder = "Email Address", style = "width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.EmailAddress, "", new { id = "EmailAddress-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.TelephoneNumber, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.TextBoxFor(model => model.TelephoneNumber, new { @class = "form-control", maxlength = "10", oninput = "javascript: return checkMaxLength(this);", onkeypress = "javascript: return isInputNumber(event);", placeholder = "Telephone#", style = "width: 81%;", type = "number" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.TelephoneNumber, "", new { id = "TelephoneNumber-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.EnrollmentTypeIdList, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span><br />
            <div>
                @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.EnrollmentTypeIdList, "", new { id = "EnrollmentTypeIdList-error" }).ToHtmlString()))
            </div>
            @{
                string checkedValue;
                for (int i = 0; i < LookupCache.CodeTypeSelectListItems["EnrollmentType"]["CodeDataNameId"].Count; i++)
                {
                    checkedValue = "";
                    if (Model.EnrollmentTypeIdList != null)
                    {
                        foreach (var enrollmentTypeId in Model.EnrollmentTypeIdList)
                        {
                            if (LookupCache.CodeTypeSelectListItems["EnrollmentType"]["CodeDataNameId"][i].Value == enrollmentTypeId)
                            {
                                checkedValue = "checked";
                                break;
                            }
                        }
                    }
                    if (i == 0)
                    {
                        <input @checkedValue id="EnrollmentTypeIdList@(i)" name="EnrollmentTypeIdList" type="checkbox" value="@LookupCache.CodeTypeSelectListItems["EnrollmentType"]["CodeDataNameId"][i].Value" /><label class="col-form-label" style="color:maroon ; padding-left: 9px;">Other <span style="color: #0000ff;">(Please enter in comments)</span></label>
                    }
                    else
                    {
                        <input @checkedValue id="EnrollmentTypeIdList@(i)" name="EnrollmentTypeIdList" type="checkbox" value="@LookupCache.CodeTypeSelectListItems["EnrollmentType"]["CodeDataNameId"][i].Value" /><label class="col-form-label" style="padding-left: 9px;">@ArchitectureLibraryCacheData.LookupCache.CodeTypeSelectListItems["EnrollmentType"]["CodeDataNameId"][i].Text</label>
                    }
                    <br />
                }
            }
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.ContactMessage, new { @class = "col-form-label" })
            @Html.TextAreaFor(model => model.ContactMessage, new { @class = "form-control", maxlength = "2048", oninput = "javascript: return checkMaxLength(this);", placeholder = "Write a comment......", style = "height: 120px; width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.ContactMessage, "", new { id = "ContactMessage-error" }).ToHtmlString()))
        </div>
    </div>
    <div class="col-md-5">
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.AddressLine1, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.TextBoxFor(model => model.AddressLine1, new { @class = "form-control", maxlength = "100", oninput = "javascript: return checkMaxLength(this);", placeholder = "Address Line 1", style = "width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.AddressLine1, "", new { id = "AddressLine1-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.AddressLine2, new { @class = "col-form-label" })
            @Html.TextBoxFor(m => m.AddressLine2, new { @class = "form-control", maxlength = "5", oninput = "javascript: return checkMaxLength(this);", placeholder = "Address Line 2", style = "width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.AddressLine2, "", new { id = "AddressLine12-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.ZipCode, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control", maxlength = "5", oninput = "javascript: return checkMaxLength(this);", onkeypress = "javascript: return isInputNumber(event);", style = "font-size: 12px; height: 35px; overflow: hidden; width: 81%;", type = "number" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.ZipCode, "", new { id = "ZipCode-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.CityName, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.TextAreaFor(m => m.CityName, new { @class = "form-control", maxlength = "100", oninput = "javascript: return checkMaxLength(this);", style = "font-size: 12px; height: 35px; overflow: hidden; width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.CityName, "", new { id = "CityName-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.DemogInfoSubDivisionId, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.DropDownListFor(m => m.DemogInfoSubDivisionId, new SelectList(ArchitectureLibraryCacheData.DemogInfoCache.DemogInfoSubDivisionSelectListItems[236], "Text", "Text", Model.DemogInfoSubDivisionId), "---", new { @class = "form-control", style = "font-size: 12px; width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.DemogInfoSubDivisionId, "", new { id = "DemogInfoSubDivisionId-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.DrugScreenId, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @Html.DropDownListFor(m => m.DrugScreenId, new SelectList(ArchitectureLibraryCacheData.LookupCache.CodeTypeSelectListItems["YesNo"]["CodeDataNameId"], "Text", "Text", Model.DrugScreenId), "---", new { @class = "form-control", style = "font-size: 12px; width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.DrugScreenId, "", new { id = "DrugScreenId-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.DrivingLicenseDemogInfoSubDivisionId, new { @class = "col-form-label" })&nbsp;<span class="col-form-label" style="color: #0000ff; font-weight: bold;">(Required)</span>
            @*@Html.TextBoxFor(m => m.DrivingLicenseDemogInfoSubDivisionId, new { @class = "form-control", maxlength = "5", oninput = "javascript: return checkMaxLength(this);", onkeypress = "javascript: return isInputNumber(event);", style = "font-size: 12px; height: 35px; overflow: hidden; width: 225px;", type = "number" })*@
            @Html.DropDownListFor(m => m.DrivingLicenseDemogInfoSubDivisionId, new SelectList(ArchitectureLibraryCacheData.DemogInfoCache.DemogInfoSubDivisionSelectListItems[236], "Text", "Text", Model.DrivingLicenseDemogInfoSubDivisionId), "---", new { @class = "form-control", style = "font-size: 12px; width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.DrivingLicenseDemogInfoSubDivisionId, "", new { id = "DrivingLicenseDemogInfoSubDivisionId-error" }).ToHtmlString()))
        </div>
        <div class="row" style="text-align: left; padding-left: 63px;">
            @Html.LabelFor(m => m.CaptchaAnswerEnrollment, new { @class = "col-form-label" })&nbsp;- Sum of <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberEnrollment0</span> & <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberEnrollment1</span><span style="color: #0000ff; font-weight: bold;">? (Required)</span>
            @Html.TextBoxFor(m => m.CaptchaAnswerEnrollment, null, new { @class = "form-control", placeholder = @Model.CaptchaNumberEnrollment0 + " + " + @Model.CaptchaNumberEnrollment1 + " =?", style = "width: 81%;" })
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.CaptchaAnswerEnrollment, "", new { id = "CaptchaAnswerEnrollment-error" }).ToHtmlString()))
        </div>
    </div>
</div>
