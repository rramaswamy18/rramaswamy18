@using ArchitectureLibraryCacheData
@model ArchitectureLibraryModels.RegisterUserProfModel
<style>
    #RegisterEmailAddress-error, #ConfirmRegisterEmailAddress-error, #TelephoneNumber-error, #CaptchaAnswerRegister-error,
    #TelephoneCountryId-error, #OTPSendTypeId-error, #UserTypeId-error {
        color: #ff0000;
        display: block;
        font-size: 12px;
        font-weight: bold;
    }
</style>
@{
    var codeDataModels = LookupCache.GetCodeDatasForCodeTypeNameDescByCodeDataNameId("OTPSendType", "");
    if (Model != null && Model.ResponseObjectModel != null && !string.IsNullOrWhiteSpace(Model.ResponseObjectModel.ValidationSummaryMessage))
    {
        <div class="row validationSummaryMessage">
            @Model.ResponseObjectModel.ValidationSummaryMessage
        </div>
    }
    if (!ViewData.ModelState.IsValid)
    {
        <div class="row">
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(false, "", new { @class = "validationSummaryErrors" }).ToHtmlString()))
        </div>
    }
    bool mobileDevice = Request.Browser.IsMobileDevice;
    string paddingLeft;
    if (mobileDevice)
    {
        paddingLeft = "9px;";
    }
    else
    {
        paddingLeft = "0px;";
    }
}
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.RegisterEmailAddress, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.RegisterEmailAddress, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.RegisterEmailAddress), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.RegisterEmailAddress, "", new { id = "RegisterEmailAddress-error" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.RegisterTelephoneCountryId, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.DropDownListFor(m => m.RegisterTelephoneCountryId, new SelectList(ArchitectureLibraryCacheData.DemogInfoCache.DemogInfoCountrySelectListItemsName, "Value", "Text", Model.RegisterTelephoneCountryId), "---", new { @class = "form-control", style = "font-size: 14px; width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.RegisterTelephoneCountryId, "", new { id = "TelephoneCountryId-error", style = "float: left; width: 36%;" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.TelephoneNumber, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.TelephoneNumber, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.TelephoneNumber), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.TelephoneNumber, "", new { id = "TelephoneNumber-error", style = "float: left; width: 36%;" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.OTPSendTypeId, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    <br style="clear: both;" />
    <label class="radio-inline" style="font-weight: bold;">
        <input checked="checked" id="OTPSendTypeId0" name="OTPSendTypeId" type="radio" value="@codeDataModels[0].CodeDataNameId">@codeDataModels[0].CodeDataDesc0
    </label>
    @for (int i = 1; i < codeDataModels.Count; i++)
    {
        <label class="radio-inline" style="font-weight: bold;">
            <input disabled="disabled" id="OTPSendTypeId@(i)" name="OTPSendTypeId" type="radio" value="@codeDataModels[i].CodeDataNameId">@codeDataModels[i].CodeDataDesc0
        </label>
    }
    <br style="clear: both;" />
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.OTPSendTypeId, "", new { id = "OTPSendTypeId-error", style = "float: left; width: 36%;" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.CaptchaAnswerRegister, new { @class = "col-form-label" })&nbsp;- Sum of <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberRegister0</span> & <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberRegister1</span><span style="color: #0000ff; font-weight: bold;">? (Required)</span>
    @Html.TextBoxFor(m => m.CaptchaAnswerRegister, null, new { @class = "form-control", placeholder = @Model.CaptchaNumberRegister0 + " + " + @Model.CaptchaNumberRegister1 + " =?", style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.CaptchaAnswerRegister, "", new { id = "CaptchaAnswerRegister-error" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.AspNetRoleUserTypeId, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.DropDownListFor(m => m.AspNetRoleUserTypeId, new SelectList(ArchLibCache.UserTypes, "Value", "Text", Model.AspNetRoleUserTypeId), null, new { @class = "form-control", style = "font-size: 14px; width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.AspNetRoleUserTypeId, "", new { id = "UserTypeId-error" }).ToHtmlString()))
</div>
