@using ArchitectureLibraryCacheData
@using RetailSlnCacheData
@using RetailSlnEnumerations
@using RetailSlnModels
@model OrderItem1Model
@{
    var clientId = ArchLibCache.ClientId;
    var clientName = ArchLibCache.ClientName;
    int index;
    string discountPercent, defaultValue = "''";
    ItemDiscountModel itemDiscountModel;
}
<style>
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        opacity: 1;
    }
</style>
<!--Bundle-->
<table style="border-style: none; border-width: 0px; padding: 5px; width: 99%;">
    <colgroup>
        <col style="width: 27px;" />
        <col style="width: 36px;" />
        <col />
        <col style="width: 54px;" />
        <col style="width: 54px;" />
        <col style="width: 153px;" />
    </colgroup>
    @if (Model.ItemMasterModel.ItemModels.Count > 1)
    {
        <tr>
            <td></td>
            <td colspan="4" style="margin-left: auto; margin-right: auto;">
                <select class="form-control" id="itemBundleItem" onchange="javascript: return itemBundleItem_onclick(this.selectedIndex, @Model.ItemMasterModel.ItemModels.Count);">
                    <option value="">--- Select Item ---</option>
                    @foreach (var itemModel in Model.ItemMasterModel.ItemModels)
                    {
                        Model.ItemDiscountModels.TryGetValue(itemModel.ItemId.Value, out itemDiscountModel);
                        discountPercent = "";
                        if (itemDiscountModel != null)
                        {
                            discountPercent = itemDiscountModel.DiscountPercent.ToString("0.00") + "%";
                        }
                        else
                        {
                            discountPercent = "";
                        }
                        <option value="@itemModel.ItemId">@(itemModel.ItemMasterModel.ItemMasterDesc + ";" + itemModel.ItemItemSpecsForDisplay + ";" + itemModel.ItemRateFormatted + ";" + discountPercent)</option>
                    }
                </select>
            </td>
        </tr>
    }
    <tr>
        <th></th>
        <th colspan="5" style="padding: 5px; text-align: left;">
            <span style="color: #ff0000; font-size: 16px;">Order this bundle as is without breaking.</span>
            <span style="color: #a54000; font-size: 14px;">This bundle has</span>
            <span style="color: #0000ff; font-size: 15px;">@Model.ItemBundleDataModel.ShoppingCartItemBundleModels.Count</span>
            <span style="color: #a54000; font-size: 14px;">items</span>
        </th>
    </tr>
    <tr style="background-color: #d0d0d0;">
        <th style="padding: 5px; text-align: right;">#</th>
        <th style="padding: 5px; text-align: center;">Id</th>
        <th style="padding: 5px; text-align: left;">Desc</th>
        <th style="padding: 5px; text-align: right;">Rate</th>
        <th style="padding: 5px; text-align: right;">Disc.</th>
        <th style="padding: 5px; text-align: left;">Qty</th>
    </tr>
    @{
        <!--Without breaking-->
        foreach (var itemModel in Model.ItemMasterModel.ItemModels)
        {
            Model.ItemDiscountModels.TryGetValue(itemModel.ItemId.Value, out itemDiscountModel);
            if (itemDiscountModel != null)
            {
                discountPercent = itemDiscountModel.DiscountPercent.ToString("0.00") + "%";
            }
            else
            {
                discountPercent = "";
            }
        }
    }
    <tr>
        <td style="font-size: 12px; padding: 5px; text-align: right; vertical-align: top;">
            @{
                index = -1;
                foreach (var itemModel in Model.ItemMasterModel.ItemModels)
                {
                    index++;
                    <span id="itemRowIndex@(index)" style="color: #000000;">@(index + 1).</span>
                }
            }
        </td>
        <td style="font-size: 12px; padding: 5px; text-align: center; vertical-align: top;">
            <input id="itemId0" name="itemId0" type="hidden" value="@Model.ItemMasterModel.ItemModels[0].ItemId" />
            @{
                index = -1;
                foreach (var itemModel in Model.ItemMasterModel.ItemModels)
                {
                    index++;
                    <span id="itemIdRow@(index)" style="color: #000000;">@itemModel.ItemId</span>
                }
            }
        </td>
        <td style="font-size: 12px; padding: 5px; text-align: left; vertical-align: top;">
            @{
                index = -1;
                foreach (var itemModel in Model.ItemMasterModel.ItemModels)
                {
                    index++;
                    <span id="itemDesc@(index)" style="color: #000000; font-weight: bold;">
                        @(Model.ItemMasterModel.ItemMasterDesc0 + " " + Model.ItemMasterModel.ItemMasterDesc1)
                        @if (!string.IsNullOrWhiteSpace(Model.ItemMasterModel.ItemMasterDesc2 + Model.ItemMasterModel.ItemMasterDesc3))
                        {
                            <br style="clear: both;" />
                            @(Model.ItemMasterModel.ItemMasterDesc2 + " " + Model.ItemMasterModel.ItemMasterDesc3)
                        }
                        <span style="color: #000000; font-weight: normal;">
                            @if (!string.IsNullOrWhiteSpace(itemModel.ItemItemSpecsForDisplay))
                            {
                                <br style="clear: both;" />
                                @itemModel.ItemItemSpecsForDisplay
                            }
                        </span>
                    </span>
                }
            }
        </td>
        <td style="font-size: 12px; padding: 5px; text-align: right; vertical-align: top;">
            @{
                index = -1;
                foreach (var itemModel in Model.ItemMasterModel.ItemModels)
                {
                    index++;
                    <span id="itemRate@(index)" style="color: #000000; font-weight: bold;">@itemModel.ItemRateFormatted</span>
                }
            }
        </td>
        <td style="font-size: 12px; padding: 5px; text-align: right; vertical-align: top;">
            @{
                index = -1;
                foreach (var itemModel in Model.ItemMasterModel.ItemModels)
                {
                    Model.ItemDiscountModels.TryGetValue(itemModel.ItemId.Value, out itemDiscountModel);
                    discountPercent = "";
                    if (itemDiscountModel != null)
                    {
                        discountPercent = itemDiscountModel.DiscountPercent.ToString("0.00") + "%";
                    }
                    else
                    {
                        discountPercent = "";
                    }
                    index++;
                    <span id="itemDiscount@(index)" style="color: #000000; font-weight: bold;">@discountPercent</span>
                }
                index = 0;//Reset this for the following td
            }
        </td>
        <td style="padding: 5px; text-align: left; vertical-align: top;">
            <input class="form-control" id="orderQty@(index)" inputmode="numeric" max="999" maxlength="3" min="1" oninput="javascript: return orderQty_oninput(this, '');" style="background-color: #e1e1e1; border-color: #000000; border-style: none; border-width: 1px; border-radius: 30px; float: left; font-size: 12px; font-weight: 900; width: 63px;" title="Enter quantity and click add to cart @Model.ItemMasterModel.ImageTitle" type="number" value="" />
            <span style="width: 9px;">&nbsp;</span>
            <a href="javascript: void(0);" onclick="javascript: return addToCart_onclick(document.getElementById('itemId@(index)').value, @index, @defaultValue, true);" title="Enter quantity and click add to cart @Model.ItemMasterModel.ItemMasterDesc"><img alt="Enter quantity and click add to cart" src="~/Images/Addtocart.png" style="height: 36px; padding-left: 2px; width: 45px;" title="Enter quantity and click add to cart @Model.ItemMasterModel.ImageTitle" /></a>
            <span id="spnMessageSuccess@(index)" style="display: none; font-family: Arial; font-size: 12px; font-weight: bold;">
                <i class="fa fa-check" style="color: #00d000; padding-left: 7px; padding-right: 1px;"></i>
                <span style="color: #a54000;">Added...<span id="spnMessageSuccessText@(index)" style="color: #0000ff; font-size:12px;"></span></span>
                <br style="clear: both;" />
            </span>
            <span id="spnMessageError@(index)" style="display: none; font-family: Arial; font-size: 12px; font-weight: bold;">
                <i class="fa fa-remove" style="color: #ff0000; padding-left: 7px; padding-right: 1px;"></i>
                <span id="spnMessageErrorText@(index)" style="color: #ff0000;"></span>
                <br style="clear: both;" />
            </span>
        </td>
    </tr>
</table>
<div id="divItemBundle"></div>
<script type="text/javascript">
    function itemBundleItem_onclick(selectedIndex, count) {
        if (selectedIndex > 0) {
            var optionValue = document.getElementById("itemBundleItem").options[selectedIndex].value;
            //alert(selectedIndex + " " + count + " " + optionValue);
            for (var i = 0; i < count; i++) {
                document.getElementById("itemRowIndex" + i).style.display = "none";
                document.getElementById("itemIdRow" + i).style.display = "none";
                document.getElementById("itemDesc" + i).style.display = "none";
                document.getElementById("itemRate" + i).style.display = "none";
                document.getElementById("itemDiscount" + i).style.display = "none";
            }

            selectedIndex--;
            document.getElementById("itemId0").value = document.getElementById("itemIdRow" + selectedIndex).innerText;

            document.getElementById("itemRowIndex" + selectedIndex).style.display = "block";
            document.getElementById("itemIdRow" + selectedIndex).style.display = "block";
            document.getElementById("itemDesc" + selectedIndex).style.display = "block";
            document.getElementById("itemRate" + selectedIndex).style.display = "block";
            document.getElementById("itemDiscount" + selectedIndex).style.display = "block";

            document.getElementById("itemBundleItem").selectedIndex = 0;

            btnItemBundleLoad_onclick(optionValue);
        }
    }
    function btnItemBundleLoad_onclick(itemId) {
        console.log("00000000", "btnItemBundleLoad_onclick", "ENTER!!!");
        $("#loadingModal").modal({ backdrop: 'static', keyboard: false });
        var url = "/Home/ItemBundleData/" + itemId;
        try {
            $.ajax({
                url: url,
                type: "GET",
                contentType: "application/x-www-form-urlencoded; charset=UTF-8",//"application/x-www-form-urlencoded; charset=UTF-8",//"text/plain; charset=UTF-8", //false, //"application/json; charset=utf-8",
                //dataType: "html",
                //data: postData,
                //async: false,
                success: function (responseData, textStatus, request) {
                    $("#loadingModal").modal('hide');
                    document.getElementById("divItemBundle").innerHTML = responseData.htmlString;
                    if (responseData.success) {
                        var itemBundleCount, currencySymbol = "@RetailSlnCache.CurrencySymbol";
                        for (var i = 0; ; i++) {
                            if (document.getElementById("itemIdForBundle" + i) == null) {
                                itemBundleCount = i;
                                break;
                            }
                        }
                        calculateItemBundleRate(itemBundleCount, currencySymbol);
                    }
                    else {
                        alert("Error occurred");
                    }
                    console.log("00001000", "btnItemBundleLoad_onclick success", responseData.processMessage);
                },
                error: function (xhr, exception) {
                    $("#loadingModal").modal('hide');
                    console.log("00099000", "btnItemBundleLoad_onclick", "ERROR???", exception, xhr);
                    alert("Please fix errors to continue???....");
                }
            });
        }
        catch (err) {
            $('#loadingModal').modal('hide');
            alert("Please fix errors to continue???");
            console.log("00099100", "btnItemBundleLoad_onclick", "ERROR???", err);
        }
        return false;
    }
</script>
@if (Model.ItemMasterModel.ItemTypeId == ItemTypeEnum.ItemBundle)
{
    if (Model.ItemMasterModel.ItemModels.Count > 1)
    {
        <script type="text/javascript">
    itemBundleItem_onclick(1, @Model.ItemMasterModel.ItemModels.Count);
        </script>
    }
    else
    {
        <script type="text/javascript">
    btnItemBundleLoad_onclick(@Model.ItemMasterModel.ItemModels[0].ItemId);
        </script>
    }
}
