<style>
    .menuItemFooter {
        color: #000000;
        font-family: Roboto, sans-serif;
        font-size: 13px;
        font-weight: 900;
        padding-left: 6px;
        padding-right: 6px;
        text-decoration: underline;
        text-decoration-thickness: 1px;
        text-underline-offset: 5px;
    }

        .menuItemFooter:hover {
            text-decoration: underline;
            text-decoration-color: #61ce70;
            text-decoration-thickness: 3px;
            text-underline-offset: 5px;
        }

    .active {
        text-decoration: underline;
        text-decoration-color: #61ce70;
        text-decoration-thickness: 3px;
        text-underline-offset: 5px;
    }
</style>
@{
    string viewDataActionName, selectedMenu, loggedInUserFullName, urlString, redirectUrlString;
    try
    {
        viewDataActionName = ViewData["ActionName"].ToString();
    }
    catch
    {
        viewDataActionName = "";
    }
    ArchitectureLibraryModels.SessionObjectModel sessionObjectModel;
    if (Session["SessionObject"] != null)
    {
        sessionObjectModel = (ArchitectureLibraryModels.SessionObjectModel)Session["SessionObject"];
        loggedInUserFullName = sessionObjectModel.FirstName + " " + sessionObjectModel.LastName;
    }
    else
    {
        sessionObjectModel = null;
        loggedInUserFullName = "";
    }
}
@{
    var menuLayoutModels = ArchitectureLibraryMenuCacheData.ArchLibMenuCache.ParentMenuLayoutModels["FOOTERMENU"];
    foreach (var menuLayoutModel in menuLayoutModels)
    {
        if (viewDataActionName == menuLayoutModel.MenuUrlAction.ActionName)
        {
            selectedMenu = "menuItemFooter active";
        }
        else
        {
            selectedMenu = "menuItemFooter";
        }
        urlString = Url.Action(menuLayoutModel.MenuUrlAction.ActionName, menuLayoutModel.MenuUrlAction.ControllerName);
        if (!string.IsNullOrWhiteSpace(menuLayoutModel.MenuUrlAction.QueryString))
        {
            urlString += "?" + menuLayoutModel.MenuUrlAction.QueryString;
        }
        if (string.IsNullOrWhiteSpace(menuLayoutModel.MenuUrlAction.RedirectActionName))
        {
            redirectUrlString = "";
        }
        else
        {
            redirectUrlString = Url.Action(menuLayoutModel.MenuUrlAction.RedirectActionName, menuLayoutModel.MenuUrlAction.RedirectControllerName);
            if (!string.IsNullOrWhiteSpace(menuLayoutModel.MenuUrlAction.RedirectQueryString))
            {
                redirectUrlString += "?" + menuLayoutModel.MenuUrlAction.RedirectQueryString;
            }
            if (!string.IsNullOrWhiteSpace(menuLayoutModel.MenuUrlAction.RedirectMessage))
            {
                redirectUrlString += "?id=" + menuLayoutModel.MenuUrlAction.RedirectMessageId;
            }
        }
        switch (menuLayoutModel.MenuUrlAction.AccessType)
        {
            case "PUBLIC":
                <a class="@selectedMenu" href="@urlString" @menuLayoutModel.MenuUrlAction.HrefTarget style="width: @menuLayoutModel.MenuUrlAction.HrefWidth;">@menuLayoutModel.MenuUrlAction.LinkText</a>
                break;
            case "SECURED20": //Show this menu when logged in and when not logged as disabled
                if (sessionObjectModel == null)
                {
                    <a class="@selectedMenu" href="@redirectUrlString" @menuLayoutModel.MenuUrlAction.HrefTarget style="color: #a0a0a0; width: @menuLayoutModel.MenuUrlAction.HrefWidth;">@menuLayoutModel.MenuUrlAction.LinkText</a>
                }
                else
                {
                    <a class="@selectedMenu" href="@urlString" @menuLayoutModel.MenuUrlAction.HrefTarget style="width: @menuLayoutModel.MenuUrlAction.HrefWidth;">@menuLayoutModel.MenuUrlAction.LinkText</a>
                }
                break;
            case "SECURED40": //Show this menu only when not logged in
                if (sessionObjectModel == null)
                {
                    <a class="@selectedMenu" href="@urlString" @menuLayoutModel.MenuUrlAction.HrefTarget style="width: @menuLayoutModel.MenuUrlAction.HrefWidth;">@menuLayoutModel.MenuUrlAction.LinkText</a>
                }
                break;
            case "SECURED60": //Show this menu when bot logged in and when logged as disabled
                if (sessionObjectModel == null)
                {
                    <a class="@selectedMenu" href="@urlString" @menuLayoutModel.MenuUrlAction.HrefTarget style="width: @menuLayoutModel.MenuUrlAction.HrefWidth;">@menuLayoutModel.MenuUrlAction.LinkText</a>
                }
                else
                {
                    <a class="@selectedMenu" href="@redirectUrlString" @menuLayoutModel.MenuUrlAction.HrefTarget style="color: #a0a0a0; width: @menuLayoutModel.MenuUrlAction.HrefWidth;">@menuLayoutModel.MenuUrlAction.LinkText</a>
                }
                break;
            default:
                break;
        }
    }
}
