@model long
@using ArchitectureLibraryCacheData
@using RetailSlnEnumerations
@using RetailSlnCacheData
@using RetailSlnModels
@{
    @BuildOrderPage()
    @helper BuildOrderPage()
    {
        long clientId = ArchLibCache.ClientId;
        string clientName = ArchLibCache.ClientName;
        string categoryOrItem = "Item";
        string imageDivWidth = ArchLibCache.GetApplicationDefault(clientId, "OrderProcess", categoryOrItem + "ImageDivWidth");
        string imageHeight = ArchLibCache.GetApplicationDefault(clientId, "OrderProcess", categoryOrItem + "ImageHeight");
        string imageWidth = ArchLibCache.GetApplicationDefault(clientId, "OrderProcess", categoryOrItem + "ImageWidth");
        int imageCountPerRow = int.Parse(ArchLibCache.GetApplicationDefault(clientId, "OrderProcess", categoryOrItem + "ImageCountPerRow"));
        CategoryLayoutModel categoryLayoutModel = RetailSlnCache.CategoryLayoutModels[Model];
        List<CategoryItemMasterHierModel> categoryItemMasterHierModels = categoryLayoutModel.CategoryItemMasterHierModels;
        ItemMasterModel itemMasterModel;
        int itemindex = 0, itemSeqNum = 0, imageIndex = 0;
        foreach (var categoryItemMasterHierModel in categoryItemMasterHierModels)
        {
            imageIndex++;
            itemindex++;
            itemSeqNum++;
            itemMasterModel = categoryItemMasterHierModel.ItemMasterModel;
            <div style="display: inline-block; padding: 18px; vertical-align: top; width: @imageDivWidth;">
                <a href="@Url.Action("ItemAttributes", "Home", new { id = itemMasterModel.ItemMasterId, tabId = 0 })" target="_blank" title="View specifications, images, bundle - @itemMasterModel.ItemMasterDesc">
                    <img alt="@itemMasterModel.ImageTitle" class="img-responsive" src="~/ClientSpecific/@(clientId)_@(clientName)/Documents/Images/ItemMaster/@itemMasterModel.ImageName" style="border-radius: 25px; height: auto; max-height: @imageHeight; max-width: @imageWidth; width: 100%;" title="@(itemMasterModel.ImageTitle + " " + itemSeqNum)" />
                </a>
                @if (itemMasterModel.ItemTypeId == ItemTypeEnum.ItemBundle)
                {
                    <div style="position: relative;">
                        <div style="bottom: 1px; right: 2px; position: absolute;">
                            <a href="@Url.Action("ItemAttributes", "Home", new { id = itemMasterModel.ItemMasterId, tabId = 3 })" style="background-color: #000000; border-style: none; color: #ffffff; font-family: Arial; font-size: 12px; font-weight: 600; padding: 3px;" target="_blank" title="@itemMasterModel.ImageTitle">Item Bundle&nbsp;</a>
                        </div>
                    </div>
                }
                <br style="clear: both;" />
                <div style="text-align: left;">
                    <span style="color: #1d1d1d; font-family: Arial; font-size: 16px; font-style: normal; font-weight: 400; line-height: 21px;">
                        @if (itemMasterModel.ItemModels.Count == 1)
                        {
                            @(itemMasterModel.ItemModels[0].ItemRateFormatted + " - ")
                        }
                        @(itemMasterModel.ItemMasterDesc0 + " " + itemMasterModel.ItemMasterDesc1)
                    </span>
                    @if (!string.IsNullOrWhiteSpace(itemMasterModel.ItemMasterDesc2 + " " + itemMasterModel.ItemMasterDesc3))
                    {
                        <br style="clear: both;" />
                        <span style="color: #1d1d1d; font-family: Arial; font-size: 12px; font-style: normal; font-weight: 600; line-height: 18px;">@(itemMasterModel.ItemMasterDesc2 + " " + itemMasterModel.ItemMasterDesc3)</span>
                    }
                </div>
                @if (itemMasterModel.ItemTypeId == ItemTypeEnum.ItemBundle)
                {
                    <a href="@Url.Action("ItemAttributes", "Home", new { id = itemMasterModel.ItemMasterId, tabId = 3 })" style="color: #000000; font-size: 12px; font-weight:bold; padding-right: 3px; text-decoration: underline;" target="_blank" title="View items in the bundle - @itemMasterModel.ItemMasterDesc">Bundle</a>
                }
                <a href="@Url.Action("ItemAttributes", "Home", new { id = itemMasterModel.ItemMasterId, tabId = 0 })" style="color: #ff0000; font-size: 12px; font-weight:bold; text-decoration: underline;" target="_blank" title="View specifications - @itemMasterModel.ItemMasterDesc">Spec(s)</a>
                <a href="@Url.Action("ItemAttributes", "Home", new { id = itemMasterModel.ItemMasterId, tabId = 2 })" style="color: #0000ff; font-size: 12px; font-weight:bold; padding-left: 3px; text-decoration: underline;" target="_blank" title="View more images - @itemMasterModel.ItemMasterDesc">Image(s)</a>
                @if (itemMasterModel.ItemModels[0].ItemStatusId == ItemStatusEnum.OutOfStock)
                {
                    <br style="clear: both;" />
                    <br style="clear: both;" />
                    <span style="color: #000000; font-size: 17px; font-weight: 900;">SOLD OUT</span>
                }@*if (itemModel.ItemStatusId == ItemStatusEnum.OutOfStock)*@
                else
                {
                    bool brFlag = false;
                    int index = 0;
                    string prefixString = "", optionText;
                    <br style="clear: both;" />
                    if (itemMasterModel.ItemMasterItemSpecModels != null && itemMasterModel.ItemMasterItemSpecModels.Count > 0)
                    {
                        <span style="color: #000000; font-size: 11px; font-weight: 600;">
                            @foreach (var itemMasterItemSpecModel in itemMasterModel.ItemMasterItemSpecModels)
                            {
                                @(prefixString + ++index + ". " + itemMasterItemSpecModel.ItemSpecValueForDisplay)
                                prefixString = " | ";
                                brFlag = true;
                            }
                        </span>
                    }
                    if (itemMasterModel.ItemModels.Count == 1)
                    {
                        if (itemMasterModel.ItemModels[0].ItemItemSpecModels.Count > 0)
                        {
                            <span style="color: #000000; font-size: 11px; font-weight: 600;">
                                @foreach (var itemItemSpecModel in itemMasterModel.ItemModels[0].ItemItemSpecModels)
                                {
                                    @(prefixString + ++index + ". " + itemItemSpecModel.ItemSpecValueForDisplay)
                                    prefixString = " | ";
                                    brFlag = true;
                                }
                            </span>
                        }
                    }
                    if (brFlag)
                    {
                        <br style="clear: both;" />
                    }
                    <div style="font-size: 12px; font-weight: bold; height: 40px; padding-right: 5px; padding-top: 8px; vertical-align: middle;">
                        <input class="form-control" id="orderQty@(imageIndex)" inputmode="numeric" max="9999" maxlength="4" min="1" oninput="javascript: return orderQty_oninput(@(imageIndex));" style="background-color: #e1e1e1; border-color: #000000; border-style: none; border-width: 1px; border-radius: 30px; float: left; font-size: 12px; font-weight: 900; width: 72px;" title="Enter quantity and click add to cart @itemMasterModel.ImageTitle" type="number" value="" />
                        <a href="javascript: void(0);" onclick="javascript: return addToCart_onclick();" style="float: left;" title="Enter quantity and click add to cart @itemMasterModel.ItemMasterDesc"><img alt="Enter quantity and click add to cart" src="~/Images/Addtocart.png" style="height: 36px; padding-left: 4px; width: 45px;" title="Enter quantity and click add to cart @itemMasterModel.ItemModels[0].ImageTitle" /></a>
                    </div>
                    <br style="clear: both;" />
                    //shoppingCartItemModel = shoppingCartItems?.FirstOrDefault(x => x.ItemId == itemMasterModel.ItemModels[0].ItemId);
                    <span style="font-family: Arial; font-size: 12px; font-weight: bold;">
                        <i class="fa fa-remove" id="spnMessageRemove@(imageIndex)" style="color: #ff0000; display: none; padding-left: 7px; padding-right: 1px;"></i>
                        <span id="spnMessageError@(imageIndex)" style="color: #ff0000; display: none; font-size: 12px; padding-right: 5px;">Error???</span>
                    </span>
                    if (itemMasterModel.ItemModels.Count > 1)
                    {
                        <span id="spnMessageItem@(imageIndex)" style="color: #0000ff; font-family: Arial; font-size: 12px; font-weight: bold;">
                            Select item from below
                            <br style="clear: both;">
                        </span>
                        <div class="dropdown">
                            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenuButton@(imageIndex)" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: #a50040; font-family: Arial; font-size: 12px; font-weight: bold;">
                                --- Item(s) ---<span class="caret" style="color: #000000; font-size: 20px;">&nbsp;&nbsp;&nbsp;</span>
                            </button>
                            <table class="dropdown-menu" aria-labelledby="dropdownMenuButton@(imageIndex)" style="font-size: 12px; width: 100%;">
                                <tr>
                                    <th style="border-collapse: collapse; border-color: #000000; border-style: solid; border-width: 1px; padding: 3px;">Rate</th>
                                    <th style="border-collapse: collapse; border-color: #000000; border-style: solid; border-width: 1px; padding: 3px; width: 100%;">Spec(s)</th>
                                </tr>
                                @foreach (var itemModel in itemMasterModel.ItemModels)
                                {
                                    <tr>
                                        @{
                                            optionText = "";
                                            if (itemModel.ItemItemSpecModels != null && itemModel.ItemItemSpecModels.Count > 0)
                                            {
                                                prefixString = "";
                                                foreach (var itemItemSpecModel in itemModel.ItemItemSpecModels)
                                                {
                                                    optionText += prefixString + itemItemSpecModel.ItemSpecValueForDisplay;
                                                    prefixString = " | ";
                                                }
                                            }
                                        }
                                        <td class="text-right" style="border-collapse: collapse; border-color: #000000; border-style: solid; border-width: 1px; padding: 3px;"><a href="javascript: void(0);" onclick="javascript: return tempFunction('@itemModel.ItemId', '@itemModel.ItemRateFormatted', '@optionText', '@imageIndex');" style="font-weight: bold; text-decoration: underline;">@itemModel.ItemRateFormatted</a></td>
                                        <td style="border-collapse: collapse; border-color: #000000; border-style: solid; border-width: 1px; font-size: 11px; font-weight: 600; padding: 3px;">
                                            @optionText
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                        <span id="itemId@(imageIndex)" style="display: none;"></span>
                    }
                    else
                    {
                        <span id="itemId@(imageIndex)" style="display: none;">@itemMasterModel.ItemModels[0].ItemId</span>
                    }
                }@*else (itemModel.ItemStatusId == ItemStatusEnum.OutOfStock)*@
            </div>
            if (itemindex == imageCountPerRow)
            {
                itemindex = 0;
                <br style="clear: both;" />
            }
        }
    }
}
