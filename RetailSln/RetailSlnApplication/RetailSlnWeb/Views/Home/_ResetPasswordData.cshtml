@using ArchitectureLibraryCacheData
@model ArchitectureLibraryModels.ResetPasswordModel
@{
    var codeDataModels = LookupCache.GetCodeDatasForCodeTypeNameDescByCodeDataNameId("OTPSendType", "");
}
<style>
    #ResetPasswordEmailAddress-error, #ConfirmResetPasswordEmailAddress-error, #CaptchaAnswerResetPassword-error {
        color: #ff0000;
        display: block;
        font-size: 14px;
        font-weight: bold;
    }
</style>
@if (Model != null && Model.ResponseObjectModel != null && !string.IsNullOrWhiteSpace(Model.ResponseObjectModel.ValidationSummaryMessage))
{
    <div class="row validationSummaryMessage" style="padding-left: 18px; padding-right: 18px;">
        @Model.ResponseObjectModel.ValidationSummaryMessage
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
        @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(false, "", new { @class = "validationSummaryErrors" }).ToHtmlString()))
    </div>
}
@if (Model != null && Model.ResponseObjectModel != null)
{
    <div class="row" style="padding-left: 18px; padding-right: 18px; text-align:left;">
        @Html.Partial("_ResponseObject", Model.ResponseObjectModel)
    </div>
}
<div class="row" style="padding-left: 18px; padding-right: 18px;">
    @Html.LabelFor(m => m.ResetPasswordEmailAddress, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.ResetPasswordEmailAddress, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.ResetPasswordEmailAddress), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.ResetPasswordEmailAddress, "", new { id = "ResetPasswordEmailAddress-error" }).ToHtmlString()))
</div>

<br style="clear: both;" />
<div class="row" style="padding-left: 18px; padding-right: 18px;">
    @Html.LabelFor(m => m.ConfirmResetPasswordEmailAddress, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.ConfirmResetPasswordEmailAddress, new { @class = "form-control validate", oncopy = "javascript: return false;", oncut = "javascript: return false;", ondrag = "javascript: return false;", ondrop = "javascript: return false;", onpaste = "javascript: return false;", onselectstart = "javascript: return false;", placeholder = "Enter " + @Html.DisplayNameFor(m => m.ConfirmResetPasswordEmailAddress), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.ConfirmResetPasswordEmailAddress, "", new { id = "ConfirmResetPasswordEmailAddress-error" }).ToHtmlString()))
</div>

<br style="clear: both;" />
<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.OTPSendTypeId, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    <br style="clear: both;" />
    <label class="radio-inline" style="font-weight: bold;">
        <input id="OTPSendTypeId0" name="OTPSendTypeId" checked="checked" type="radio" value="@codeDataModels[0].CodeDataNameId">@codeDataModels[0].CodeDataDesc0
    </label>
    @for (int i = 1; i < codeDataModels.Count; i++)
    {
        <label class="radio-inline" style="font-weight: bold;">
            <input disabled="disabled" id="OTPSendTypeId@(i)" name="OTPSendTypeId" type="radio" value="@codeDataModels[i].CodeDataNameId">@codeDataModels[i].CodeDataDesc0
        </label>
    }
    <br style="clear: both;" />
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.OTPSendTypeId, "", new { id = "OTPSendTypeId-error", style = "float: left; width: 36%;" }).ToHtmlString()))
</div>

<br style="clear: both;" />
<div class="row" style="padding-left: 18px; padding-right: 18px;">
    @Html.LabelFor(m => m.CaptchaAnswerResetPassword, new { @class = "col-form-label" })&nbsp;- Sum of <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberResetPassword0</span> & <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberResetPassword1</span><span style="color: #0000ff; font-weight: bold;">? (Required)</span>
    @Html.TextBoxFor(m => m.CaptchaAnswerResetPassword, null, new { @class = "form-control", placeholder = @Model.CaptchaNumberResetPassword0 + " + " + @Model.CaptchaNumberResetPassword1 + " =?", style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.CaptchaAnswerResetPassword, "", new { id = "CaptchaAnswerResetPassword-error" }).ToHtmlString()))
</div>
