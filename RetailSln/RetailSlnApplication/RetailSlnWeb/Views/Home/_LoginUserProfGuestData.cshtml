@using ArchitectureLibraryModels
@model LoginUserProfGuestModel
<style>
    #LoginUserProfGuestEmailAddress-error, #ConfirmLoginUserProfGuestEmailAddress-error, #CaptchaAnswerLoginUserProfGuest-error, #LoginUserProfGuestTelephoneCountryId-error, #LoginUserProfGuestTelephoneNumber-error {
        color: #ff0000;
        display: block;
        font-size: 14px;
        font-weight: bold;
    }
</style>
@{
    if (Model != null && Model.ResponseObjectModel != null && !string.IsNullOrWhiteSpace(Model.ResponseObjectModel.ValidationSummaryMessage))
    {
        <div class="row validationSummaryMessage">
            @Model.ResponseObjectModel.ValidationSummaryMessage
        </div>
    }
    if (!ViewData.ModelState.IsValid)
    {
        <div class="row">
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(false, "", new { @class = "validationSummaryErrors" }).ToHtmlString()))
        </div>
    }
    if (Model != null && Model.ResponseObjectModel != null)
    {
        <div class="row">
            @Html.Partial("_ResponseObject", Model.ResponseObjectModel)
        </div>
    }
}
<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.LoginUserProfGuestEmailAddress, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.LoginUserProfGuestEmailAddress, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.LoginUserProfGuestEmailAddress), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginUserProfGuestEmailAddress, "", new { id = "LoginUserProfGuestEmailAddress-error" }).ToHtmlString()))
</div>

<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.ConfirmLoginUserProfGuestEmailAddress, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.ConfirmLoginUserProfGuestEmailAddress, new { autocomplete = "off", @class = "form-control validate", oncopy = "javascript: return false;", oncut = "javascript: return false;", ondrag = "javascript: return false;", ondrop = "javascript: return false;", onpaste = "javascript: return false;", onselectstart = "javascript: return false;", placeholder = "Enter " + @Html.DisplayNameFor(m => m.ConfirmLoginUserProfGuestEmailAddress), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.ConfirmLoginUserProfGuestEmailAddress, "", new { id = "ConfirmLoginUserProfGuestEmailAddress-error" }).ToHtmlString()))
</div>

<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.LoginUserProfGuestTelephoneNumber, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    <br />
    @Html.DropDownListFor(m => m.LoginUserProfGuestTelephoneCountryId, new SelectList(ArchitectureLibraryCacheData.DemogInfoCache.DemogInfoCountrySelectListItemsName, "Value", "Text", Model.LoginUserProfGuestTelephoneCountryId), "---", new { @class = "form-control", style = "float: left; font-size: 14px; width: 36%;" })
    <span style="float: left; padding-right: 9px;">&nbsp;</span>
    @Html.TextBoxFor(m => m.LoginUserProfGuestTelephoneNumber, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.LoginUserProfGuestTelephoneNumber), style = "float: left; width: 53%;" })
</div>

<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginUserProfGuestTelephoneCountryId, "", new { id = "LoginUserProfGuestTelephoneCountryId-error", style = "float: left; width: 36%;" }).ToHtmlString()))
    <span style="float: left; padding-right: 9px;">&nbsp;</span>
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginUserProfGuestTelephoneNumber, "", new { id = "LoginUserProfGuestTelephoneNumber-error", style = "float: left; width: 36%;" }).ToHtmlString()))
</div>

<div class="row" style="padding-left: 18px; padding-right: 18px; text-align: left;">
    @Html.LabelFor(m => m.CaptchaAnswerLoginUserProfGuest, new { @class = "col-form-label" })&nbsp;- Sum of <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberLoginUserProfGuest0</span> & <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberLoginUserProfGuest1</span><span style="color: #0000ff; font-weight: bold;">? (Required)</span>
    @Html.TextBoxFor(m => m.CaptchaAnswerLoginUserProfGuest, null, new { @class = "form-control", placeholder = @Model.CaptchaNumberLoginUserProfGuest0 + " + " + @Model.CaptchaNumberLoginUserProfGuest1 + " =?", style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.CaptchaAnswerLoginUserProfGuest, "", new { id = "CaptchaAnswerLoginUserProfGuest-error", style = "width: 81%;" }).ToHtmlString()))
</div>

<br style="clear: both;" />

<div id="divOTPData" style="margin: 0; padding: 0px;">
    @Html.Partial("_OTPData", Model.OTPModel, new ViewDataDictionary { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "OTPModel" } })
</div>
