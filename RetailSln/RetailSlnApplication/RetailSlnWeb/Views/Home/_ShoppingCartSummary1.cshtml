@using ArchitectureLibraryCacheData
@using ArchitectureLibraryModels
@using RetailSlnEnumerations
@using RetailSlnModels
@model PaymentInfoModel
@{
    var clientId = ArchLibCache.ClientId;
    var clientName = ArchLibCache.ClientName;
    var baseUrl = ArchLibCache.GetApplicationDefault(clientId, "BaseUrl", "");
    var imageTitle = ArchLibCache.GetApplicationDefault(clientId, "BusinessName1", "") + " | " + ArchLibCache.GetApplicationDefault(clientId, "BusinessType", "");
}
<table>
    <tr>
        <th style="text-align: center;">#</th>
        <th style="text-align: left;">Description</th>
        <th style="text-align: right;">Amount</th>
    </tr>
    @{
        int index = 0;
        foreach (var shoppingCartItemModelSummary in Model.ShoppingCartModel.ShoppingCartItemModelsSummary)
        {
            index++;
            <tr>
                <th style="font-weight: normal; padding: 9px; text-align: center;">@(index + ".")</th>
                <th style="font-weight: normal; padding: 9px; text-align: left;">
                    @shoppingCartItemModelSummary.ItemShortDesc
                    @if (shoppingCartItemModelSummary.OrderDetailTypeId == OrderDetailTypeEnum.TotalOrderAmount)
                    {
                        <br />
                        @("Total Weight : " + Model.ShoppingCartModel.ShoppingCartSummaryModel.TotalProductOrVolumetricWeightRounded + " " + Model.ShoppingCartModel.ShoppingCartSummaryModel.TotalProductOrVolumetricWeightRoundedUnit)
                    }
                </th>
                <th style="font-weight: normal; padding: 9px; text-align: right;">
                    @shoppingCartItemModelSummary.OrderAmountFormatted
                </th>
            </tr>
            if (Model.OrderSummaryModel.InvoiceTypeId != InvoiceTypeEnum.FinalInvoice)
            {
                break;
            }
        }
    }
    <tr>
        <th></th>
        <th colspan="2" style="text-align: left;">
            @Html.Raw(Model.DeliveryDataModel?.DeliveryInstructions?.Replace(Environment.NewLine, "<br />"))
        </th>
    </tr>
</table>
