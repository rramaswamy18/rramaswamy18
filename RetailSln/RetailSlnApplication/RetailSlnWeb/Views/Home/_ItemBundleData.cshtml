@model ItemBundleDataModel
@using ArchitectureLibraryCacheData
@using RetailSlnCacheData
@using RetailSlnEnumerations
@using RetailSlnModels
@functions {
    int orderQtyIndex = -1;
}
@{
    if (Model.ItemBundleModel != null)
    {
        var clientId = ArchLibCache.ClientId;
        var clientName = ArchLibCache.ClientName;
        var imageTitle = ArchLibCache.GetApplicationDefault(clientId, "BusinessName1", "") + " | " + ArchLibCache.GetApplicationDefault(clientId, "BusinessType", "");
        BuildItemBundleItem(Model.ItemBundleModel, ref orderQtyIndex, clientId, clientName);
        <span id="itemBundleId" style="display: none;">@Model.ItemBundleModel.ItemBundleId</span>
        <span id="discountPercent" style="display: none;">@Model.ItemBundleModel.DiscountPercent</span>
        <table class="table table-bordered table-condensed table-responsive" style="width: 81%;">
            <colgroup>
                <col style="width: 3%;" />
                <col style="width: 6%;" />
                <col />
                <col style="width: 11%;" />
                <col style="width: 7%;" />
                <col />
            </colgroup>
            <tr>
                <th>#</th>
                <th>Id</th>
                <th>Description</th>
                <th>Price</th>
                <th>Qty</th>
            </tr>
            @BuildItemBundle(Model.ItemBundleModel, false, clientId, clientName)
        </table>
    }
}
@helper BuildItemBundle(ItemBundleModel itemBundleModel, bool itemEdit, long clientId, string clientName)
{
    int index = 0;
    ItemBundleModel itemBundleModelTemp;
    List<ItemBundleItemModel> itemBundleItemModels = itemBundleModel.ItemBundleItemModels;
    foreach (ItemBundleItemModel itemBundleItemModel in itemBundleItemModels)
    {
        <tr>
            <td class="text-right">
                @(++index).
            </td>
            <td class="text-center">
                <a href="@Url.Action("ItemAttributes", "Home", new { id = itemBundleItemModel.ItemModel.ItemMasterId, tabId = 0 })" style="font-size: 13px; font-weight: bold; text-decoration: underline;" target="_blank">@itemBundleItemModel.ItemModel.ItemId</a>
                <span id="itemId@(itemBundleItemModel.OrderQtyIndex)" style="display: none;">@itemBundleItemModel.ItemModel.ItemId</span>
            </td>
            <td>
                @itemBundleItemModel.ItemModel.ItemMasterModel.ItemMasterDesc
                <span id="itemBundleId@(itemBundleItemModel.OrderQtyIndex)" style="display: none;">@itemBundleItemModel.ItemBundleId</span>
                <span id="itemBundleItemId@(itemBundleItemModel.OrderQtyIndex)" style="display: none;">@itemBundleItemModel.ItemBundleItemId</span>
                <span id="quantity@(itemBundleItemModel.OrderQtyIndex)" style="display: none;">@itemBundleItemModel.Quantity</span>
                <span id="itemTypeId@(itemBundleItemModel.OrderQtyIndex)" style="display: none;">@itemBundleItemModel.ItemModel.ItemTypeId</span>
                <span id="itemId@(itemBundleItemModel.OrderQtyIndex)" style="display: none;">@itemBundleItemModel.ItemModel.ItemId</span>
                @if (itemBundleItemModel.ItemModel.ItemTypeId == ItemTypeEnum.ItemBundle)
                {
                    itemBundleModelTemp = RetailSlnCache.ItemBundleModels.First(x => x.ItemId == itemBundleItemModel.ItemModel.ItemId);
                    <br />
                    <button class="btn btn-success" onclick="javascript: return btnItemBundleView_onclick('tblItemBundle@(itemBundleModelTemp.ItemBundleId)');" style="font-size: 12px;">View</button>
                    <span style="padding-left: 3px;"><button class="btn btn-primary" onclick="javascript: return btnItemBundleHide_onclick('tblItemBundle@(itemBundleModelTemp.ItemBundleId)');" style="font-size: 12px;">Hide</button></span>
                    <table class="table table-bordered table-condensed table-responsive" id="tblItemBundle@(itemBundleModelTemp.ItemBundleId)" style="display: none; float: left;">
                        <colgroup>
                            <col style="width: 3%;" />
                            <col style="width: 6%;" />
                            <col />
                            <col style="width: 11%;" />
                            <col style="width: 7%;" />
                            <col />
                        </colgroup>
                        <tr>
                            <th>#</th>
                            <th>Id</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th>Qty</th>
                        </tr>
                        @BuildItemBundle(itemBundleModelTemp, false, clientId, clientName)
                    </table>
                }
            </td>
            <td class="text-right">
                @itemBundleItemModel.ItemModel.ItemRateFormatted
            </td>
            <td class="text-right">
                @if (itemEdit)
                {
                    <input class="form-control" id="orderQty@(itemBundleItemModel.OrderQtyIndex)" min="0" max="99" maxlength="3" name="orderQty@(itemBundleItemModel.OrderQtyIndex)" oninput="javascript: return orderQty_oninput2('@itemBundleItemModel.OrderQtyIndex', '@itemBundleItemModel.OrderQtyIndexStart', '@itemBundleItemModel.OrderQtyIndexFinish');" style="width: 72px;" type="number" value="@itemBundleItemModel.Quantity" />
                    <a href="javascript: void(0);" onclick="javascript: return addToCart1_onclick(@itemBundleItemModel.ItemModel.ItemMasterModel.ItemModels[0].ItemId, @itemBundleItemModel.OrderQtyIndex);" title="Enter quantity and click add to cart @itemBundleItemModel.ItemModel.ItemMasterModel.ItemMasterDesc"><img alt="Enter quantity and click add to cart" src="~/Images/Addtocart.png" style="height: 36px; padding-left: 4px; width: 45px;" title="Enter quantity and click add to cart @itemBundleItemModel.ItemModel.ItemMasterModel.ImageTitle" /></a>
                    <span id="spnMessageSuccess@(itemBundleItemModel.OrderQtyIndex)" style="display: none; font-family: Arial; font-size: 12px; font-weight: bold;">
                        <br style="clear: both;" />
                        <i class="fa fa-check" style="color: #00d000; padding-left: 7px; padding-right: 1px;"></i>
                        <span style="color: #a54000;">Added...<span id="spnMessageSuccessText@(itemBundleItemModel.OrderQtyIndex)" style="color: #0000ff; font-size:12px;"></span></span>
                    </span>
                    <span id="spnMessageError@(itemBundleItemModel.OrderQtyIndex)" style="display: none; font-family: Arial; font-size: 12px; font-weight: bold;">
                        <br style="clear: both;" />
                        <i class="fa fa-remove" style="color: #ff0000; padding-left: 7px; padding-right: 1px;"></i>
                        <span id="spnMessageErrorText@(itemBundleItemModel.OrderQtyIndex)" style="color: #ff0000;"></span>
                    </span>
                }
                else
                {
                    @itemBundleItemModel.Quantity
                }
            </td>
            <td>
                <img alt="@(itemBundleItemModel.ItemModel.ItemMasterModel.ItemMasterDesc + " " + itemBundleItemModel.ItemModel.ItemMasterModel.ImageTitle)" src="~/ClientSpecific/@(clientId)_@(clientName)/Documents/Images/ItemMaster/@itemBundleItemModel.ItemModel.ItemMasterModel.ImageName" style="height: 90px; width: 90px;" title="@(itemBundleItemModel.ItemModel.ItemMasterModel.ItemMasterDesc + " " + itemBundleItemModel.ItemModel.ItemMasterModel.ImageTitle)" />
            </td>
        </tr>
    }
}
@functions {
    private void BuildItemBundleItem(ItemBundleModel itemBundleModel, ref int orderQtyIndex, long clientId, string clientName)
    {
        ItemBundleModel itemBundleModelTemp;
        foreach (var itemBundleItemModel in itemBundleModel.ItemBundleItemModels)
        {
            orderQtyIndex++;
            itemBundleItemModel.OrderQtyIndex = orderQtyIndex;
            if (itemBundleItemModel.ItemModel.ItemTypeId == ItemTypeEnum.ItemBundle)
            {
                itemBundleItemModel.OrderQtyIndexStart = orderQtyIndex + 1;
                itemBundleModelTemp = RetailSlnCache.ItemBundleModels.First(x => x.ItemId == itemBundleItemModel.ItemModel.ItemId);
                BuildItemBundleItem(itemBundleModelTemp, ref orderQtyIndex, clientId, clientName);
                itemBundleItemModel.OrderQtyIndexFinish = orderQtyIndex;
            }
        }
    }
}
