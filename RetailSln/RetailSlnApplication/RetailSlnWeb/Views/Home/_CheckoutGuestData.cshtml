@using ArchitectureLibraryCacheData
@using ArchitectureLibraryModels
@model LoginUserProfGuestModel
<style>
    #CaptchaAnswerLoginUserProfGuest-error, #LoginUserProfGuestEmailAddress-error, #OTPSendTypeId-error,
    #LoginUserProfGuestTelephoneCountryId-error, #LoginUserProfGuestTelephoneNumber-error {
        color: #ff0000;
        display: block;
        font-size: 12px;
        font-weight: bold;
    }
</style>
@{
    var codeDataModels = LookupCache.GetCodeDatasForCodeTypeNameDescByCodeDataNameId("OTPSendType", "");
    bool mobileDevice = Request.Browser.IsMobileDevice;
    string paddingLeft;
    if (mobileDevice)
    {
        paddingLeft = "9px;";
    }
    else
    {
        paddingLeft = "0px;";
    }
    if (Model != null && Model.ResponseObjectModel != null && !string.IsNullOrWhiteSpace(Model.ResponseObjectModel.ValidationSummaryMessage))
    {
        <div class="row validationSummaryMessage">
            @Model.ResponseObjectModel.ValidationSummaryMessage
        </div>
    }
    if (!ViewData.ModelState.IsValid)
    {
        <div class="row" style="text-align: left;">
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationSummary(false, "", new { @class = "validationSummaryErrors" }).ToHtmlString()))
        </div>
    }
}
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.LoginUserProfGuestEmailAddress, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.LoginUserProfGuestEmailAddress, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.LoginUserProfGuestEmailAddress), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginUserProfGuestEmailAddress, "", new { id = "LoginUserProfGuestEmailAddress-error" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.LoginUserProfGuestTelephoneCountryId, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.DropDownListFor(m => m.LoginUserProfGuestTelephoneCountryId, new SelectList(ArchitectureLibraryCacheData.DemogInfoCache.DemogInfoCountrySelectListItemsName, "Value", "Text", Model.LoginUserProfGuestTelephoneCountryId), "---", new { @class = "form-control", style = "font-size: 14px; width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginUserProfGuestTelephoneCountryId, "", new { id = "LoginUserProfGuestTelephoneCountryId-error", style = "float: left; width: 36%;" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.LoginUserProfGuestTelephoneNumber, new { @class = "col-form-label" })&nbsp;<span style="color: #0000ff; font-weight: bold;">(Required)</span>
    @Html.TextBoxFor(m => m.LoginUserProfGuestTelephoneNumber, new { @class = "form-control validate", placeholder = "Enter " + @Html.DisplayNameFor(m => m.LoginUserProfGuestTelephoneNumber), style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginUserProfGuestTelephoneNumber, "", new { id = "LoginUserProfGuestTelephoneNumber-error", style = "float: left; width: 36%;" }).ToHtmlString()))
</div>
<div class="row" style="padding-left: @paddingLeft; text-align: left;">
    @Html.LabelFor(m => m.CaptchaAnswerLoginUserProfGuest, new { @class = "col-form-label" })&nbsp;- Sum of <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberLoginUserProfGuest0</span> & <span style="color: #ff0000; font-weight: bold;">@Model.CaptchaNumberLoginUserProfGuest1</span><span style="color: #0000ff; font-weight: bold;">? (Required)</span>
    @Html.TextBoxFor(m => m.CaptchaAnswerLoginUserProfGuest, null, new { @class = "form-control", placeholder = @Model.CaptchaNumberLoginUserProfGuest0 + " + " + @Model.CaptchaNumberLoginUserProfGuest1 + " =?", style = "width: 90%;" })
    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.CaptchaAnswerLoginUserProfGuest, "", new { id = "CaptchaAnswerLoginUserProfGuest-error" }).ToHtmlString()))
</div>
