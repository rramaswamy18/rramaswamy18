@using RetailSlnCacheData
@using RetailSlnModels
@model ShoppingCartModel
@{
    int index = 0;
}
<table class="table table-striped">
    <tr>
        @if (!Model.Checkout)
        {
            <th class="text-center" scope="col"></th>
        }
        <th scope="col">#</th>
        <th scope="col">Item#</th>
        <th scope="col">Item Desc</th>
        <th class="text-right" scope="col">Rate</th>
        <th class="text-right" scope="col">Disc.</th>
        <th class="text-right" scope="col">Rate</th>
        <th class="text-center" scope="col">Qty</th>
        <th class="text-right" scope="col">Amount</th>
        @if (Model.ShoppingCartSummaryModel.ShowDiscountsAdditionalCharges)
        {
            <th class="text-center" scope="col">
                Other
            </th>
        }
    </tr>
    @{
        foreach (var shoppingCartItem in Model.ShoppingCartItemModels)
        {
            index++;
        <tr>
            @if (!Model.Checkout)
            {
                <td class="text-center"><a href="javascript: void(0);" onclick="javascript: return removeFromCart_onclick(@(index - 1));"><img alt="" src="~/Images/Delete.jpg" title="Click to remove the item from shopping cart #@(index)" /></a></td>
            }
            <th scope="row">@(index + ".")</th>
            <td class="text-left">
                @shoppingCartItem.ItemId
            </td>
            <td class="text-left">
                @(shoppingCartItem.ItemMasterDesc0 + " " + shoppingCartItem.ItemMasterDesc1)
                @if (!string.IsNullOrWhiteSpace(shoppingCartItem.ItemMasterDesc2 + " " + shoppingCartItem.ItemMasterDesc3))
                {
                    <br style="clear: both;" />
                    <span style="color: #1d1d1d; font-family: Arial; font-size: 12px; font-style: normal; font-weight: 600;">@(shoppingCartItem.ItemMasterDesc2 + " " + shoppingCartItem.ItemMasterDesc3)</span>
                }
                @if (!string.IsNullOrWhiteSpace(shoppingCartItem.ItemItemSpecsForDisplay))
                {
                    <br style="clear: both;" />
                    <span style="color: #000000; font-size: 11px; font-weight: bold;">@shoppingCartItem.ItemItemSpecsForDisplay</span>
                }
                <br />
                @("HSN : " + shoppingCartItem.HSNCode)
                <br />
                @("Prod Code : " + shoppingCartItem.ProductCode)
            </td>
            <td class="text-right">
                @shoppingCartItem.ItemRateBeforeDiscount.Value.ToString(RetailSlnCache.CurrencyDecimalPlaces, RetailSlnCache.CurrencyCultureInfo).Replace(" ", "")
            </td>
            <td class="text-right">
                @(shoppingCartItem.ItemDiscountPercent.Value.ToString("#0.00") + "%")
            </td>
            <td class="text-right">
                @shoppingCartItem.ItemRate.Value.ToString(RetailSlnCache.CurrencyDecimalPlaces, RetailSlnCache.CurrencyCultureInfo).Replace(" ", "")
            </td>
            <td class="text-center">
                @shoppingCartItem.OrderQty
            </td>
            <td class="text-right">
                @shoppingCartItem.OrderAmount.Value.ToString(RetailSlnCache.CurrencyDecimalPlaces, RetailSlnCache.CurrencyCultureInfo).Replace(" ", "")
            </td>
            @if (Model.ShoppingCartSummaryModel.ShowDiscountsAdditionalCharges)
            {

                <td>
                    <table class="table table-condensed table-responsive table-striped">
                        @if (shoppingCartItem.ItemRateBeforeDiscount != shoppingCartItem.ItemRate)
                        {
                            <tr>
                                <td class="text-right">
                                    <span style="color: #000000; font-weight: bold;">Before</span><br />
                                    @shoppingCartItem.ItemRateBeforeDiscountFormatted
                                </td>
                                <td class="text-right">
                                    <span style="color: #000000; font-weight: bold;">Disc.</span><br />
                                    @(shoppingCartItem.ItemDiscountPercent.Value.ToString("#0.00") + "%")
                                </td>
                                <td class="text-right">
                                    <span style="color: #000000; font-weight: bold;">After</span><br />
                                    @shoppingCartItem.ItemRateFormatted
                                </td>
                            </tr>
                        }
                        @if (shoppingCartItem.ShoppingCartItemSummarys.Count > 0)
                        {
                            <tr>
                                <th>
                                    Desc
                                </th>
                                <th>
                                </th>
                                <th class="text-right">
                                    %
                                </th>
                                <th class="text-right">
                                    Amt
                                </th>
                            </tr>
                        }
                        @foreach (var shoppingCartItemSummary in shoppingCartItem.ShoppingCartItemSummarys)
                        {
                            <tr>
                                <th scope="row">
                                    @shoppingCartItemSummary.ItemShortDesc
                                </th>
                                <td>
                                </td>
                                <td class="text-right">
                                    @(shoppingCartItemSummary.ItemRate.Value.ToString("#0.00") + "%")
                                </td>
                                <td class="text-right">
                                    @shoppingCartItemSummary.OrderAmount.Value.ToString(RetailSlnCache.CurrencyDecimalPlaces, RetailSlnCache.CurrencyCultureInfo).Replace(" ", "")
                                </td>
                            </tr>
                        }
                    </table>
                </td>
            }
        </tr>
            <tr>
                <td></td>
                <td class="text-left" colspan="6">
                    @if (Model.Checkout)
                    {
                        @Html.DisplayFor(m => shoppingCartItem.OrderComments)
                    }
                    else
                    {
                        @Html.TextBoxFor(m => shoppingCartItem.OrderComments, new { id = "orderComments" + (index - 1), @class = "form-control", placeholder = "Enter comments for the item ordered", style = "height: 43px; width: 95%;", onchange = "javascript: return orderComments_onchange(" + (index - 1) + ");" })
                    }
                </td>
            </tr>
        }
    }
</table>
