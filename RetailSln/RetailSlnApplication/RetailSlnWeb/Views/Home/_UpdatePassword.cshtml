@model ArchitectureLibraryModels.UpdatePasswordModel
<div class="center" id="divUpdatePasswordSuccess" style="width: 100%;">
    <div class="row" style="text-align: left;">
        <span style="color: #000000; font-size: 23px; font-weight: bold; letter-spacing: 4px; text-transform: uppercase;">update password</span>
    </div>
    <form id="formUpdatePasswordData">
        @Html.Partial("_UpdatePasswordData", Model)
    </form>
</div>
<div class="center" style="width: 100%;">
    <button class="loginRegisterbtn" id="updatePasswordSave" onclick="javascript: return updatePasswordSave_onclick();" style="letter-spacing: 9px; text-transform: uppercase; width: 81%;" type="button">update password</button>
    <br style="clear: both;" />
    <ul id="passwordStrengthMessages" style="display: none; margin: auto; font-weight: bold; text-align: left;">
        @if (Model.PasswordStrengthMessages != null)
        {
            for (int i = 0; i < Model.PasswordStrengthMessages.Count; i++)
            {
                <li class="passwordStrengthInvalid" id="passwordStrengthMessage@(i)" style="list-style-type: decimal;">@Model.PasswordStrengthMessages[i]</li>
            }
        }
    </ul>
    <ul style="margin: auto; font-weight: bold; text-align: left;">
        <li>
            Password to be 6 to 18 characters in length
        </li>
        <li>
            Password should contain uppercase A to Z
        </li>
        <li>
            Password should contain lowercase a to z
        </li>
        <li>
            Password should contain number 0 to 9
        </li>
        <li>
            Password should contain special characters !@@#$%^&*()_
        </li>
    </ul>
    <br style="clear: both;" />
    <ul style="margin: auto; font-weight: bold; text-align: left;">
        <li>
            Please enter email address, confirm email address
        </li>
        <li>
            Enter a password following the password rules and reenter in confirm password
        </li>
        <li>
            Answer captcha question and enter your OTP
        </li>
        @*<li>
                Click <span style="color: #ff0000; font-size: 18px;">U P D A T E&nbsp;&nbsp;P A S S W O R D</span> to continue
            </li>
            <li>
                Please check your <span style="color: #ff0000; font-size: 15px;">Inbox</span> for email with further instructions
            </li>
            <li>
                If you do not see the email in your Inbox - please check <span style="color: #ff0000; font-size: 15px;">Spam / Junk folder(s)</span>
            </li>
            <li>
                If so, move the email to Inbox and mark the <span style="color: #ff0000; font-size: 15px;">SENDER SAFE</span>
            </li>*@
    </ul>
</div>
<script type="text/javascript">
    function updatePasswordSave_onclick() {
        console.log("00000000", "updatePasswordSave_onclick");
        $("#loadingModal").modal({ backdrop: 'static', keyboard: false });
        var url = "/Home/UpdatePassword";
        var postData = $("#formUpdatePasswordData").serialize();
        $.ajax({
            url: url,
            type: "POST",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",//"application/x-www-form-urlencoded; charset=UTF-8",//"text/plain; charset=UTF-8", //false, //"application/json; charset=utf-8",
            //dataType: "html",
            data: postData,
            //async: false,
            success: function (responseData, textStatus, request) {
                $("#loadingModal").modal('hide');
                console.log("00001000", "updatePasswordSave_onclick success", responseData.processMessage);
                //console.log(responseData);
                if (responseData.success) {
                    document.getElementById("divUpdatePasswordSuccess").innerHTML = responseData.htmlString;
                }
                else {
                    document.getElementById("formUpdatePasswordData").innerHTML = responseData.htmlString;
                }
                console.log("00090000", "updatePasswordSave_onclick success", "Exit");
            },
            error: function (xhr, exception) {
                $("#loadingModal").modal('hide');
                document.getElementById("formUpdatePasswordData").innerHTML = xhr.responseText;
            }
        });
    }
    function showHideForShow(inputElementId, typeAttributeValue) {
        //Change the attribute to text
        $("#" + inputElementId).attr('type', typeAttributeValue);
        $('.icon').removeClass('fa fa-eye-slash').addClass('fa fa-eye');
    }
    function showHideForHide(inputElementId, typeAttributeValue) {
        //Change the attribute back to password
        $('#' + inputElementId).attr('type', typeAttributeValue);
        $('.icon').removeClass('fa fa-eye').addClass('fa fa-eye-slash');
    }
    //function checkPasswordStrength(password) {
    //    var i, j;
    //    var matchedCase = new Array();
    //    matchedCase.push("!#@@$%^&*()"); //Special Character
    //    console.log(matchedCase);
    //    matchedCase.push("[A-Z]");     //Uppercase Alphabets
    //    matchedCase.push("[0-9]");     //Numbers
    //    matchedCase.push("[a-z]");     //Lowercase Alphabets
    //    var matchedCounter = new Array();
    //    matchedCounter.push(false); //Length 0
    //    matchedCounter.push(false); //Special Character 1
    //    matchedCounter.push(false); //Uppercase Alphabets 2
    //    matchedCounter.push(false); //Numbers 3
    //    matchedCounter.push(false); //Lowercase Alphabets 4
    //    if (password.length >= 9) {
    //        matchedCounter[0] = true;
    //    }
    //    for (i = 0; i < password.length; i++) {
    //        for (j = 0; j < matchedCase[0].length; j++) {
    //            if (password.substr(i, 1) == matchedCase[0].substr(j, 1)) {
    //                matchedCounter[1] = true;
    //                break;
    //            }
    //        }
    //    }
    //    if (new RegExp(matchedCase[1]).test(password)) {
    //        matchedCounter[2] = true;
    //    }
    //    if (new RegExp(matchedCase[2]).test(password)) {
    //        matchedCounter[3] = true;
    //    }
    //    if (new RegExp(matchedCase[3]).test(password)) {
    //        matchedCounter[4] = true;
    //    }
    //    var matchedCounterCount = 0;
    //    for (i = 0; i < matchedCounter.length; i++) {
    //        if (matchedCounter[i]) {
    //            matchedCounterCount++;
    //        }
    //    }
    //    if (matchedCounterCount == 5) {
    //        return false;
    //    }
    //    else {
    //        return true;
    //    }
    //}
    //function validatePasswordStrength(password) {
    //    var i, j;
    //    for (i = 0; ; i++) {
    //        try {
    //            document.getElementById("passwordStrengthMessage" + i).classList.add("passwordStrengthInvalid");
    //        }
    //        catch (err) {
    //            break;
    //        }
    //    }
    //    // Do not show anything when the length of password is zero.
    //    if (password.length === 0) {
    //        document.getElementById("LoginPasswordStrengthMessage").innerHTML = "";
    //        for (i = 0; i < 5; i++) {
    //            document.getElementById("passwordStrengthMessage" + i).classList.remove("passwordStrengthValid");
    //            document.getElementById("passwordStrengthMessage" + i).classList.add("passwordStrengthInvalid");
    //        }
    //        return;
    //    }
    //    // Create an array and push all possible values that you want in password
    //    var matchedCase = new Array();
    //    matchedCase.push("!#$%^&*()"); // Special Charector
    //    matchedCase.push("[A-Z]");     // Uppercase Alpabates
    //    matchedCase.push("[0-9]");     // Numbers
    //    matchedCase.push("[a-z]");     // Lowercase Alphabates
    //    var matchedCounter = new Array();
    //    // Check the conditions
    //    if (password.length >= 9) {
    //        matchedCounter.push(true);
    //        document.getElementById("passwordStrengthMessage0").classList.remove("passwordStrengthInvalid");
    //        document.getElementById("passwordStrengthMessage0").classList.add("passwordStrengthValid");
    //    }
    //    for (i = 0; i < password.length; i++) {
    //        for (j = 0; j < matchedCase[0].length; j++) {
    //            if (password.substr(i, 1) == matchedCase[0].substr(j, 1)) {
    //                matchedCounter.push(true);
    //                document.getElementById("passwordStrengthMessage4").classList.remove("passwordStrengthInvalid");
    //                document.getElementById("passwordStrengthMessage4").classList.add("passwordStrengthValid");
    //                break;
    //            }
    //        }
    //    }
    //    if (new RegExp(matchedCase[1]).test(password)) {
    //        matchedCounter.push(true);
    //        document.getElementById("passwordStrengthMessage1").classList.remove("passwordStrengthInvalid");
    //        document.getElementById("passwordStrengthMessage1").classList.add("passwordStrengthValid");
    //    }
    //    if (new RegExp(matchedCase[2]).test(password)) {
    //        matchedCounter.push(true);
    //        document.getElementById("passwordStrengthMessage3").classList.remove("passwordStrengthInvalid");
    //        document.getElementById("passwordStrengthMessage3").classList.add("passwordStrengthValid");
    //    }
    //    if (new RegExp(matchedCase[3]).test(password)) {
    //        matchedCounter.push(true);
    //        document.getElementById("passwordStrengthMessage2").classList.remove("passwordStrengthInvalid");
    //        document.getElementById("passwordStrengthMessage2").classList.add("passwordStrengthValid");
    //    }
    //    var ctr = matchedCounter.length;
    //    var color = "";
    //    var strength = "";
    //    console.log(password, matchedCounter, ctr);
    //    switch (ctr) {
    //        case 0:
    //        case 1:
    //        case 2:
    //            strength = "Very Weak";
    //            color = "red";
    //            break;
    //        case 3:
    //            strength = "Medium";
    //            color = "orange";
    //            break;
    //        case 4:
    //            strength = "Strong";
    //            color = "navy";
    //            break;
    //        case 5:
    //        default:
    //            strength = "Excellent";
    //            color = "green";
    //            break;
    //    }
    //    document.getElementById("LoginPasswordStrengthMessage").innerHTML = strength;
    //    document.getElementById("LoginPasswordStrengthMessage").style.color = color;
    //}
</script>
@*  *@
